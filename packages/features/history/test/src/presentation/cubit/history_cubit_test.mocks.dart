// Mocks generated by Mockito 5.4.6 from annotations
// in history/test/src/presentation/cubit/history_cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:history/src/domain/load_history_use_case.dart' as _i2;
import 'package:history/src/domain/models/short_url.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [LoadHistoryUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoadHistoryUseCase extends _i1.Mock
    implements _i2.LoadHistoryUseCase {
  @override
  _i3.Stream<List<_i4.ShortUrl>> call() =>
      (super.noSuchMethod(
            Invocation.method(#call, []),
            returnValue: _i3.Stream<List<_i4.ShortUrl>>.empty(),
            returnValueForMissingStub: _i3.Stream<List<_i4.ShortUrl>>.empty(),
          )
          as _i3.Stream<List<_i4.ShortUrl>>);
}
