// Mocks generated by Mockito 5.4.6 from annotations
// in create/test/src/data/create_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dio/dio.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:network/src/endpoint.dart' as _i5;
import 'package:network/src/network_response.dart' as _i2;
import 'package:network/src/network_service.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeNetworkResponse_0<T1> extends _i1.SmartFake
    implements _i2.NetworkResponse<T1> {
  _FakeNetworkResponse_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [NetworkService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkService extends _i1.Mock implements _i3.NetworkService {
  @override
  _i4.Future<_i2.NetworkResponse<T>> send<T>(
    _i5.Endpoint? endpoint, {
    T Function(dynamic)? decoder,
    _i6.CancelToken? cancelToken,
    Map<String, String>? extraHeaders,
    Duration? timeout,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #send,
              [endpoint],
              {
                #decoder: decoder,
                #cancelToken: cancelToken,
                #extraHeaders: extraHeaders,
                #timeout: timeout,
              },
            ),
            returnValue: _i4.Future<_i2.NetworkResponse<T>>.value(
              _FakeNetworkResponse_0<T>(
                this,
                Invocation.method(
                  #send,
                  [endpoint],
                  {
                    #decoder: decoder,
                    #cancelToken: cancelToken,
                    #extraHeaders: extraHeaders,
                    #timeout: timeout,
                  },
                ),
              ),
            ),
            returnValueForMissingStub: _i4.Future<_i2.NetworkResponse<T>>.value(
              _FakeNetworkResponse_0<T>(
                this,
                Invocation.method(
                  #send,
                  [endpoint],
                  {
                    #decoder: decoder,
                    #cancelToken: cancelToken,
                    #extraHeaders: extraHeaders,
                    #timeout: timeout,
                  },
                ),
              ),
            ),
          )
          as _i4.Future<_i2.NetworkResponse<T>>);
}
